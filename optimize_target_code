ASSUME CS:CODE, DS:DATA, SS:STACK
 DATA SEGMENT
   global DW 0
   DW 0
   DW 0
   DW 0
   DW 0
   DW 0
   DW 0
   DW 0
   DW 0
 DATA ENDS
 STACK SEGMENT
  DW 200 DUP(0)
 STACK ENDS
 CODE SEGMENT
  MOV AX, DATA
  MOV DS, AX
MAIN:
  JMP L8
L8:
  MOV AX, 20
  MOV WORD PTR DS:[2], AX
  CALL FAR PTR sum
  MOV WORD PTR SS:[BP - 44], AX
  JMP L10
L12:
  JMP L13
L13:
  JMP L10
L10:
  MOV AX, 0
  MOV WORD PTR SS:[BP - 16], AX
  MOV AX, 1
  MOV WORD PTR SS:[BP - 20], AX
L14:
  MOV AX, WORD PTR SS:[BP - 16]
  MOV BX, WORD PTR SS:[BP - 18]
  CMP AX, BX
  PUSHF
  POP AX
  AND AX, 0001H
  MOV WORD PTR SS:[BP - 46], AX
  MOV AX, WORD PTR SS:[BP - 46]
  CMP AX, 0
  JNE L15
  MOV AX, WORD PTR SS:[BP - 16]
  MOV WORD PTR DS:[2], AX
  CALL FAR PTR do_while
  MOV WORD PTR SS:[BP - 48], AX
  MOV AX, WORD PTR SS:[BP - 16]
  MOV BX, 1
  ADD AX, BX
  MOV WORD PTR SS:[BP - 16], AX
  MOV WORD PTR DS:[16], AX
  JMP L14
L15:
  MOV AX, 4C00H
  INT 21H

sum PROC FAR
  PUSH BP
  MOV BP, SP
  MOV AX, WORD PTR DS:[2]
  MOV WORD PTR SS:[BP - 0], AX
  MOV AX, 5
  MOV WORD PTR SS:[BP - 2], AX
L0:
  MOV AX, WORD PTR SS:[BP - 0]
  MOV BX, 0
  CMP AX, BX
  PUSHF
  POP AX
  TEST AX, 0041H
  PUSHF
  POP AX
  AND AX, 0040H
  MOV WORD PTR SS:[BP - 4], AX
  MOV AX, WORD PTR SS:[BP - 2]
  MOV BX, 0
  CMP AX, BX
  PUSHF
  POP AX
  TEST AX, 0041H
  PUSHF
  POP AX
  AND AX, 0040H
  MOV WORD PTR SS:[BP - 6], AX
  MOV AX, WORD PTR SS:[BP - 4]
  MOV BX, WORD PTR SS:[BP - 6]
  AND AX, BX
  MOV WORD PTR SS:[BP - 8], AX
  MOV AX, WORD PTR SS:[BP - 8]
  CMP AX, 0
  JNE L1
  MOV AX, WORD PTR SS:[BP - 0]
  MOV BX, 1
  SUB AX, BX
  MOV WORD PTR SS:[BP - 0], AX
  MOV WORD PTR DS:[0], AX
  JMP L0
L1:
  MOV SP, BP
  POP BP
  RET
sum ENDP

fact PROC FAR
  PUSH BP
  MOV BP, SP
  MOV AX, WORD PTR DS:[2]
  MOV WORD PTR SS:[BP - 0], AX
  MOV SP, BP
  POP BP
  RET
  JMP L2
L2:
  MOV AX, -1
  MOV WORD PTR DS:[2], AX
  CALL FAR PTR fact
  MOV WORD PTR SS:[BP - 2], AX

  MOV BX, WORD PTR SS:[BP - 2]
  MUL BX
  MOV WORD PTR SS:[BP - 4], AX
  MOV SP, BP
  POP BP
  RET
fact ENDP

do_while PROC FAR
  PUSH BP
  MOV BP, SP
  MOV AX, WORD PTR DS:[2]
  MOV WORD PTR SS:[BP - 0], AX
  MOV AX, 1

L4:
  MOV AX, WORD PTR SS:[BP - 0]
  MOV BX, 5
  CMP AX, BX
  PUSHF
  POP AX
  AND AX, 0040H
  MOV WORD PTR SS:[BP - 4], AX
  MOV AX, WORD PTR SS:[BP - 4]
  CMP AX, 0
  JNE L6
  JMP L4
L6:
  MOV AX, WORD PTR SS:[BP - 0]
  MOV BX, 1
  SUB AX, BX
  MOV WORD PTR SS:[BP - 0], AX
  MOV WORD PTR DS:[0], AX
  MOV AX, WORD PTR SS:[BP - 0]
  MOV BX, 0
  CMP AX, BX
  PUSHF
  POP AX
  TEST AX, 0041H
  PUSHF
  POP AX
  AND AX, 0040H
  MOV WORD PTR SS:[BP - 6], AX
  MOV AX, WORD PTR SS:[BP - 6]
  CMP AX, 0
  JNE L5
  JMP L4
L5:
  MOV SP, BP
  POP BP
  RET
do_while ENDP
 CODE ENDS
END